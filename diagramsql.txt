// Use DBML to define your database structure
// Docs: https://dbml.dbdiagram.io/docs


Table PatientFillHistory {
  patient VARCHAR
  history INT [PRIMARY KEY]
}

Table MedicalHistory {
  id INT [PRIMARY KEY]
  date DATE
  condition TEXT [note: 'Content of the history']
  surgeries VARCHAR
  medication VARCHAR
}

Table DoctorsViewHistory {
  history INT [PRIMARY KEY]
  doctor VARCHAR [PRIMARY KEY]
}

Table Doctor {
  email VARCHAR [PRIMARY KEY]
  gender VARCHAR
  password VARCHAR
  name VARCHAR
}

Table DoctorsHaveSchedules {
  schedule INT [PRIMARY KEY]
  doctor VARCHAR [PRIMARY KEY]
}

Table Schedules {
  id INT [PRIMARY KEY]
  startime TIME [PRIMARY KEY]
  endtime TIME [PRIMARY KEY]
  breaktime TIME [PRIMARY KEY]
  day DATE [PRIMARY KEY]
}

Table Diagnose {
  appointment INT [PRIMARY KEY]
  doctor VARCHAR [PRIMARY KEY]
  diagnosis VARCHAR
  prescription VARCHAR
}

Table Appointments {
  id INT [PRIMARY KEY]
  date DATE
  startTime TIME 
  endTime TIME 
  status VARCHAR
}

Table PatientsAttendAppointments {
  patient VARCHAR [PRIMARY KEY]
  appointment INT [PRIMARY KEY]
  concerns VARCHAR
  symptoms VARCHAR
}

Table Patient {
  email VARCHAR [PRIMARY KEY]
  password VARCHAR
  name VARCHAR
  address VARCHAR
  gender VARCHAR
}

/*
Table follows {
  following_user_id INT
  followed_user_id INT
  created_at timestamp 
}

Table users {
  id INT [PRIMARY KEY]
  username VARCHAR
  role VARCHAR
  created_at timestamp
}

Table posts {
  id INT [PRIMARY KEY]
  title VARCHAR
  body text [note: 'Content of the post']
  user_id INT
  status VARCHAR
  created_at timestamp
}

Ref: posts.user_id > users.id // many-to-one

Ref: users.id < follows.following_user_id

Ref: users.id < follows.followed_user_id
*/

Ref: PatientFillHistory.history - MedicalHistory.id
Ref: PatientFillHistory.patient - Patient.email
Ref: DoctorsViewHistory.history - MedicalHistory.id
Ref: DoctorsViewHistory.doctor - Doctor.email
Ref: DoctorsHaveSchedules.doctor - Doctor.email
Ref: DoctorsHaveSchedules.schedule - Schedules.id
Ref: Diagnose.doctor - Doctor.email
Ref: Diagnose.appointment - Appointments.id
Ref: PatientsAttendAppointments.appointment - Appointments.id
Ref: PatientsAttendAppointments.patient - Patient.email


